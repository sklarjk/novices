<chapter xmlns:xi="http://www.w3.org/2001/XInclude"  xml:id="repos">

<title>Creating your own PTX file</title>

<section><title>First steps</title>
<p>
Now is a good time to try creating your own PTX document. The easiest way to do this is to first follow the instructions in the  <q>A Careful, Quick Minimal Example,</q> chapter in <xref ref="authorguide"/> to create your first PTX document.</p>

<p> The next step might then be to choose a PTX (or XML) file from the <c>mathbook/examples</c> folder and use it as a template. A good template to start with is <c>mathbook/examples/sample-article/sample-article.xml</c>: the HTML version of the sample article, <url href="http://mathbook.pugetsound.edu/examples/sample-article/html/"/>, provides some  instruction for writing in PTX, while the XML code itself demonstrates actual PTX coding. 
</p>

<p>
<alert>Remember that when you compile, you will always need to be sure you are including the correct path to the style file, based on your PTX file's location.</alert></p>

<p>
<alert>Changing your output file names:</alert>
By default, your PTX will compile to an HTML (respectively, LaTeX) file called <c>index.html</c> (resp., <c>index.tex</c>). If you are writing an <c>&lt;article&gt;</c> and you wish your output files to have,say, the title <q>ducks</q> preceding the extension, add the attribute <c>xml:id="ducks"</c> to your 
<c>&lt;article&gt;</c> element using the following code: <c>&lt;article xml:id="ducks"&gt;</c>.</p>

<p>Take some time playing with whichever template(s) you choose.  Experiment with creating lists, using <c>&lt;theorem&gt;</c> and <c>&lt;example&gt;</c> elements, etc.  (For now you can think of <q>elements</q> in PreTeXt as playing the role which environments play in LaTeX.) <alert>Try not to worry about the appearance of your HTML or PDF at the moment; you can customize appearances later.</alert> </p>
</section>




<section><title>Familiarize yourself with the  <acro>RELAX-NG</acro> schema</title>

<p> From the section on <acro>RELAX-NG</acro> schema in <xref ref="authorguide"/>: <q> A <term>schema</term> is a set of patterns which describe how the elements of a language may be combined. The PreTeXt
vocabulary is described by a <acro>RELAX-NG</acro> schema</q>.</p>

<p>As you experiment, you should start getting used to the <q><acro>RELAX-NG schema.</acro></q>   If you do not follow the schema, your PTX code may not compile correctly, and even if it does compile correctly, it may not do so after an update to <c>mathbook</c>.</p>

<p>A decription for the <acro>RELAX-NG</acro> schema can be found at <url href="http://mathbook.pugetsound.edu/doc/schema/"/>. For instance, if you select the element <c>&lt;example&gt;</c> in the left-hand column, you will see lists of elements under the headings <q><alert>Content model elements</alert></q> and <q><alert>Included in content model of elements</alert>.</q>  The former list contains the elements that the <c>&lt;example&gt;</c> element may contain, and the latter contains the elements in which the <c>&lt;example&gt;</c> element may be contained.</p>
</section>

<section><title>Coding modularly using <c>xinclude</c></title>

<p>From <xref ref="authorguide"/>: <q>The <c>xinclude</c> mechanism ... is of some use for organizing your work, so you
do not have mammoth files open in your editor.</q> By using this mechanism you can put portions of your document in separate PTX files and then <q>include</q> them in your main file. For instance, if your book has five chapters, you may want to write each chapter in a separate PTX file.</p>  

<p>If you wish to, for instance, include the chapter in the file <c>algebra.ptx</c> in your main file, <c>index.ptx</c>, put <c>algebra.ptx</c> in the same directory as <c>index.ptx</c>, and insert the following code in <c>index.ptx</c> where you want the chapter to appear: <c>&lt;xi:include href="algebra.ptx" /&gt;</c>. You can see examples of this technique being used in <c>mathbook/examples/sample-book/sample-book.xml</c>.</p>

</section>
</chapter>
